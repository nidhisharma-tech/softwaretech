---
interface Props {
    title: string;
    price: string;
    description: string;
    features: string[];
    isPopular?: boolean;
}

const { title, price, description, features, isPopular = false } = Astro.props;
---

<div class={`bg-white rounded-lg shadow-lg p-8 ${isPopular ? 'border-2 border-purple-500 relative' : ''}`}>
    {isPopular && (
        <div class="absolute top-0 right-0 bg-purple-500 text-white px-4 py-1 rounded-bl-lg rounded-tr-lg text-sm font-semibold">
            Most Popular
        </div>
    )}
    <h3 class="text-2xl font-bold mb-4">{title}</h3>
    <p class="text-4xl font-bold mb-2">{price}</p>
    <p class="text-gray-600 mb-6">{description}</p>
    <ul class="space-y-3 mb-8">
        {features.map(feature => (
            <li class="flex items-center">
                <svg class="w-5 h-5 text-green-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                </svg>
                {feature}
            </li>
        ))}
    </ul>
    <button class={`w-full py-3 rounded-lg font-semibold transition-colors ${
        isPopular 
            ? 'bg-purple-700 text-white hover:bg-purple-800' 
            : 'bg-purple-100 text-purple-700 hover:bg-purple-200'
    }`}>
        Get Started
    </button>
</div>